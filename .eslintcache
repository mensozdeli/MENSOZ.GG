[{"/Users/arman/Documents/GitHub/MENSOZ.GG/src/index.js":"1","/Users/arman/Documents/GitHub/MENSOZ.GG/src/App.js":"2","/Users/arman/Documents/GitHub/MENSOZ.GG/src/reportWebVitals.js":"3","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Products/Products.jsx":"4","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Products/Product/Product.jsx":"5","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/index.js":"6","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Navbar/Navbar.jsx":"7","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Navbar/navbarStyles.js":"8","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Products/Product/productStyles.js":"9","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Products/productsStyles.js":"10","/Users/arman/Documents/GitHub/MENSOZ.GG/src/lib/commerce.js":"11","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Cart/Cart.jsx":"12","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Cart/styles.js":"13","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Cart/CartItem/CartItem.jsx":"14","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Cart/CartItem/styles.js":"15","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/Checkout/Checkout.jsx":"16","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/Checkout/checkoutStyles.js":"17","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/AddressForm.jsx":"18","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/PaymentForm.jsx":"19","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/CustomTextField.jsx":"20","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/Review.jsx":"21","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Footer/Footer.js":"22"},{"size":302,"mtime":1616350262125,"results":"23","hashOfConfig":"24"},{"size":7562,"mtime":1676673604332,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1616176719645,"results":"26","hashOfConfig":"24"},{"size":1266,"mtime":1639346164679,"results":"27","hashOfConfig":"24"},{"size":4886,"mtime":1676676086161,"results":"28","hashOfConfig":"24"},{"size":271,"mtime":1626987331037,"results":"29","hashOfConfig":"24"},{"size":1582,"mtime":1676677414988,"results":"30","hashOfConfig":"24"},{"size":1616,"mtime":1617391690349,"results":"31","hashOfConfig":"24"},{"size":486,"mtime":1617394156269,"results":"32","hashOfConfig":"24"},{"size":421,"mtime":1626989464214,"results":"33","hashOfConfig":"24"},{"size":125,"mtime":1616350262126,"results":"34","hashOfConfig":"24"},{"size":2179,"mtime":1617393727282,"results":"35","hashOfConfig":"24"},{"size":1197,"mtime":1626998595568,"results":"36","hashOfConfig":"24"},{"size":1578,"mtime":1617405855248,"results":"37","hashOfConfig":"24"},{"size":387,"mtime":1639343852944,"results":"38","hashOfConfig":"24"},{"size":3755,"mtime":1639343852945,"results":"39","hashOfConfig":"24"},{"size":1411,"mtime":1617407297708,"results":"40","hashOfConfig":"24"},{"size":6097,"mtime":1638300819460,"results":"41","hashOfConfig":"24"},{"size":3291,"mtime":1639343852947,"results":"42","hashOfConfig":"24"},{"size":583,"mtime":1617396442297,"results":"43","hashOfConfig":"24"},{"size":1425,"mtime":1639343852948,"results":"44","hashOfConfig":"24"},{"size":1045,"mtime":1653166044629,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"16uycm3",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/arman/Documents/GitHub/MENSOZ.GG/src/index.js",[],["98","99"],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/App.js",["100"],"import logo from './logo.png';\nimport './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport { commerce } from './lib/commerce';\nimport { Products, Navbar, Cart, Checkout, Footer } from './components';\nimport{BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport ReactJKMusicPlayer from 'react-jinke-music-player';\nimport 'react-jinke-music-player/assets/index.css';\n\n// import whereYouAt from './assets/music/WHERE-YOU-AT.alp.wav';\n// import theyKnow from './assets/music/THEY-KNOW.wav';\n// import dog from './assets/music/DOG.wav';\n// import machine$ from './assets/music/MACHINE$.wav';\n// import rise from './assets/music/RISE.wav';\n\nimport albumCover from './assets/album-cover.PNG';\nimport dog from './assets/music/dog-basedgod.wav';\n\n//Adding songs September 18, 2021\nimport bananaBread from './assets/music/banana-bread-mayor-marc.m4a';\nimport dibi from './assets/music/dibiflipsession2-2.m4a';\n//Covers For Songs\nimport bananaBreadCover from './assets/IMG_5809.jpg';\nimport dibiCover from './assets/flipCover.jpeg';\n\n//Adding songs for TYPE:PROTO drop May 21, 2022\nimport typeProto1 from './assets/music/typeproto01.mp3';\nimport typeProto2 from './assets/music/typeproto02.mp3';\nimport typeProto3 from './assets/music/typeproto03.mp3';\nimport typeProtoCover from './assets/TypeProtoCover.png';\n\nconst App = () => {\n    \n\n    const [products, setProducts] = useState([]);\n    const [cart, setCart] = useState({});\n    const [order, setOrder] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n\n    //fetches products from commerce.js\n    const fetchProducts = async() => {\n        const { data } = await commerce.products.list();\n        setProducts(data);\n    }\n\n    //fetches the active cart from commercejs\n    const fetchCart = async () => {\n        const cart  = await commerce.cart.retrieve();\n        setCart(cart);\n    }\n\n    //Adds a product to the active cart\n    const handleAddToCart = async(productId, quantity) => {\n        const {cart}  = await commerce.cart.add(productId, quantity);\n        setCart(cart);\n    } \n\n    const handleAddToCartVariant = async (productId, quantity, variantGroupId, optionId) => {\n        console.log(productId, quantity, variantGroupId, optionId);\n        const {cart} = await commerce.cart.add(productId, quantity, {[variantGroupId] : optionId,});\n        setCart(cart);\n\n    \n    }\n\n    //updates the quantity of a product in the cart\n    const handleUpdateCartQty = async(productId, quantity) => {\n        const {cart} = await commerce.cart.update(productId, {quantity});\n        setCart(cart);\n    }\n\n    //Removes a product from the cart\n    const handleRemoveFromCart = async(productId) => {\n        const {cart} = await commerce.cart.remove(productId);\n        setCart(cart);\n    }\n\n    //Empties the entire cart\n    const handleEmptyCart = async () => {\n        const {cart} = await commerce.cart.empty();\n        setCart(cart);\n    }\n\n    const refreshCart = async () => {\n        const newCart = await commerce.cart.refresh();\n        setCart(newCart);\n    };\n\n    const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n        try{\n          const incomingOrder = await commerce.checkout.capture(checkoutTokenId, newOrder);\n          setOrder(incomingOrder);\n          refreshCart();\n        } \n        catch (error){\n          console.log(\"Error in handling checkout!!\");\n          setErrorMessage(error.data.error.message);\n        }\n    };\n\n    useEffect(() => {\n        fetchProducts();\n        fetchCart();\n    }, []);\n    console.log(\"Logging Products: \", products);\n    console.log(\"Products in Cart: \", cart);\n    // console.log(\"Total Items: \", cart.total_items);\n\n    const audiolist = [\n        {\n            cover: typeProtoCover,\n            musicSrc: typeProto1,\n            name: 'TYPE:PROTO 1',\n            singer: 'Mayor Marc'\n\n        },\n        {\n            cover: typeProtoCover,\n            musicSrc: typeProto2,\n            name: 'TYPE:PROTO 2',\n            singer: 'Mayor Marc'\n\n        },\n        {\n            cover: typeProtoCover,\n            musicSrc: typeProto3,\n            name: 'TYPE:PROTO 3',\n            singer: 'Mayor Marc'\n\n        },\n        {\n            cover: albumCover,\n            musicSrc: dog,\n            name: 'DOG Remix (Feat. Lil B) [Remix]',\n            singer: 'Mayor Marc'\n\n        },\n        {\n            cover: dibiCover,\n            musicSrc: dibi,\n            name: 'dibiflipsession',\n            singer: 'Mayor Marc'\n\n        },\n        {\n            cover: bananaBreadCover,\n            musicSrc: bananaBread,\n            name: 'banana bread',\n            singer: 'Mayor Marc'\n        },\n    ]\n\n    return (\n        <Router>\n            <div className=\"App\">\n  \n               \n                <Navbar totalItems = {cart.total_items}/>\n                <Switch>\n                    {/* Home Page Route */}\n                    <Route exact path=\"/\">\n                        <header className=\"App-header\">\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                        <iframe width=\"311\" height=\"175\" src=\"https://www.youtube.com/embed/JH61TJ9Tgr4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                        <p>\n                        ¡ NO VISION , NO HOPE !\n                        </p>\n                        </header>\n                        <div className=\"Products\">\n                            <Products products={products} onAddToCart={handleAddToCart} onAddToCartVariant={handleAddToCartVariant}/> \n                        </div>\n                        {\n                            window.innerWidth > 711 ? \n                            <ReactJKMusicPlayer\n                                audioLists={audiolist} \n                                mode={\"full\"} \n                                // toggleMode={false} \n                                showDownload={false}\n                                autoPlay={false} \n                                defaultPosition={{ right: 100, bottom: 120}}\n                            /> : \n                            <ReactJKMusicPlayer\n                                audioLists={audiolist}  \n                                // toggleMode={false} \n                                showDownload={false}\n                                autoPlay={false} \n                                defaultPosition={{ right: 20, bottom: 120}}\n                            />\n                        }\n                     <Footer/>\n                    </Route>\n\n                    {/* Cart Route */}\n                    <Route exact path=\"/cart\">\n                        <Cart \n                            cart={cart}\n                            handleUpdateCartQty={handleUpdateCartQty}\n                            handleRemoveFromCart={handleRemoveFromCart}\n                            handleEmptyCart={handleEmptyCart}\n                        />\n                    </Route>\n\n                    {/* Checkout Route */}\n                    <Route exact path=\"/checkout\">\n                        <Checkout \n                            cart={cart} \n                            order={order}\n                            onCaptureCheckout={handleCaptureCheckout} \n                            error={errorMessage}\n                        />\n                    </Route>\n                \n                </Switch>\n            </div>\n           \n        </Router>\n  \n\t);\n}\n\nexport default App;","/Users/arman/Documents/GitHub/MENSOZ.GG/src/reportWebVitals.js",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Products/Products.jsx",["101"],"//******** JSX File for compiling each product and formatting the grid *********//\nimport React from 'react';\nimport {Grid} from '@material-ui/core';\nimport { ShortTextSharp } from '@material-ui/icons';\n\nimport Product from './Product/Product';\nimport useStyles from './productsStyles'\n\n// const products = [\n//     {id: 1, name: 'T-Shirt', description: 'Mensoz megaman shirt', price: '$45'},\n//     {id: 2, name: 'Chain', description: 'Mensoz chain', price: '$50'},\n// ]  //array of objects, these are mock procucts for testing purposes.\n //each product has an id, name, and description\n\nconst Products = ({products, onAddToCart, onAddToCartVariant}) => {\n    const classes = useStyles();\n    return(\n        <main className={classes.content}>\n            <div className={classes.toolbar}/>\n            <Grid className={classes.grid} container justify=\"center\" spacing={4}>\n                {products.slice(0).reverse().map((product) => (\n                    <Grid item key={product.id} xs={12} sm={6} md={4} lg={3}>\n                        <Product product={product} onAddToCart={onAddToCart} onAddToCartVariant={onAddToCartVariant}/> \n                    </Grid>\n                ))}\n            </Grid>\n        </main>\n    )//end return\n}\n\nexport default Products;","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Products/Product/Product.jsx",["102"],"//******** JSX File for formatting of each product*********//\nimport React, {useState} from 'react';\nimport {Card, CardMedia, CardContent, CardActions, Typography, IconButton} from '@material-ui/core';\nimport {AddShoppingCart} from '@material-ui/icons';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Carousel from 'react-material-ui-carousel';\n\nimport useStyles from './productStyles';\n\nconst Product = ({product, onAddToCart, onAddToCartVariant}) => {\n    const classes = useStyles();\n    const [size, setSize] = useState(\"\");\n\n    //store for each image of product\n    const [imgIndex, setImgIndex] = useState(0);\n\n    const handleChangeSize = (event) => {\n        setSize(event.target.value);\n        // console.log(\"Here is the size now: \", size);\n    }\n    // console.log(\"Logging product from product.jsx\", product);\n    const SizeSelect = () => (\n        <FormControl className={classes.formControl}>\n            <InputLabel id=\"size-select-label\">{product.variant_groups[0].name}</InputLabel>\n            <Select\n                labelId=\"size-select-label\"\n                id=\"size-select\"\n                value={size}\n                onChange={handleChangeSize}\n            >\n                {product.variant_groups[0].options.map((option) => (\n                    \n                       <MenuItem value={option.id}>{option.name}</MenuItem> : null\n                    \n                ))}\n\n                {/* <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem> */}\n            </Select>\n        </FormControl>\n    )\n    // console.log(\"Here is product from Product.jsx: \", product);\n\n    //Array of all images of product\n    const images = product.assets.map(asset => asset.url);\n    // console.log(\"Here is the images object in Product.jsx: \", images);\n\n    const imgClick = () => {\n        console.log('CLICKED!!');\n        // setImgIndex(imgIndex+1);\n        // console.log('imgindex ', imgIndex )\n        if(imgIndex < images.length-1){\n            console.log('imgIndex: ', imgIndex)\n            setImgIndex(imgIndex+1)\n        }\n        else{\n            console.log('in else')\n            setImgIndex(0);\n        }\n\n    }\n\n    return (\n        <Card className={classes.root}>\n            <Carousel\n                autoPlay={false}\n                navButtonsAlwaysVisible={true}\n            >\n                {/* <CardMedia className={classes.media} image={images[imgIndex]} title={product.name} onClick={imgClick}/>  */}\n               {\n                    //for each img, add to carousel \n                    images.map(img => \n                        <CardMedia className={classes.media} image={img} title={product.name} /> \n                    )\n               }\n            </Carousel>\n                <CardContent>\n                    <div className={classes.cardContent}>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {product.name}\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            {product.price.formatted_with_symbol}\n                        </Typography>\n                    </div>\n                    <Typography dangerouslySetInnerHTML={{__html: product.description}} variant=\"body2\" color=\"textSecondary\"/>\n                </CardContent>\n            <CardActions className={classes.cardActions}>\n            {/* Only shows size dropdown if the products has that option */}\n            {product.variant_groups.length > 0 ? <SizeSelect /> : null}\n            {   product.variant_groups.length === 0 && product.inventory.available !== 0 ?\n                    <IconButton aria-label=\"Add to Cart\" onClick = {() => onAddToCart(product.id, 1)}>\n                        <AddShoppingCart />\n                    </IconButton> \n                //if the size is not selected, the add to cart button will be disabled \n                : product.variant_groups.length > 0 && !size ?\n                    <IconButton disabled={true}>\n                        <AddShoppingCart />\n                    </IconButton>  \n                : product.inventory.managed && product.inventory.available === 0 ?\n                        <IconButton disabled={true}>\n                            SOLD OUT\n                            <AddShoppingCart />\n                        </IconButton>  \n                :  <IconButton aria-label=\"Add to Cart\" onClick = {() => onAddToCartVariant(product.id, 1, product.variant_groups[0].id, size)}>\n                        <AddShoppingCart />\n                    </IconButton>    \n            }\n             </CardActions>\n        </Card>\n    )\n}\n\nexport default Product;\n","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/index.js",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Navbar/Navbar.jsx",["103","104","105"],"//***************** JSX File for Formatting of the Navbar on the website ********************/\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography} from '@material-ui/core';\nimport {ShoppingCart} from '@material-ui/icons';\nimport {Link, useLocation} from 'react-router-dom';\n\nimport logo from '../../assets/mensoz-logo.png';   //Obtaining logo from assets folder to use on navbar\nimport useStyles from './navbarStyles';\n\nconst Navbar = ({ totalItems }) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    return (\n        <>\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\n                <Toolbar>\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\n                        <img src={logo} alt=\"MENSOZ DELI\" height=\"75px\" className={classes.image} />\n                        MENSOZ DELI\n                    </Typography>\n                    <div className={classes.grow} />\n                    {location.pathname == '/' && (\n                    <div className={classes.button}>\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"Show Cart Items\" color=\"inherit\">\n                            <Badge badgeContent={totalItems} color=\"secondary\">\n                                <ShoppingCart />\n                            </Badge>\n                        </IconButton>\n                    </div> )}\n                </Toolbar>\n            </AppBar>\n        </>\n    )\n}\n\nexport default Navbar\n","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Navbar/navbarStyles.js",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Products/Product/productStyles.js",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Products/productsStyles.js",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/lib/commerce.js",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Cart/Cart.jsx",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Cart/styles.js",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Cart/CartItem/CartItem.jsx",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Cart/CartItem/styles.js",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/Checkout/Checkout.jsx",["106"],"import React, {useState, useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline} from '@material-ui/core';\nimport {commerce} from '../../../lib/commerce';\nimport useStyles from './checkoutStyles';\nimport AddressForm from '../AddressForm';\nimport PaymentForm from '../PaymentForm';\n\nconst steps = ['¡ Shipping address !', '¡ Payment details !'];\n\nconst Checkout = ({cart, order, onCaptureCheckout, error}) => {\n    const [checkoutToken, setCheckoutToken] = useState(null);\n    const [activeStep, setActiveStep] = useState(0);\n    const [shippingData, setShippingData] = useState({});\n    const classes = useStyles();\n    const history = useHistory();\n    \n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep+1);\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep-1);\n\n    useEffect(() => {\n        if(cart.id){\n            const generateToken = async () => {\n                try {\n                    const token = await commerce.checkout.generateToken(cart.id, {type: 'cart'});\n                    console.log(\"Your token is: \",  token);\n                    setCheckoutToken(token);\n                } catch (error) {\n                    if (activeStep !== steps.length) history.push('/');\n                }\n            }\n\n            generateToken();\n        }\n    }, [cart])\n\n    const next = (data) => {\n        setShippingData(data);\n        nextStep();\n\n    }\n    \n    \n\n    let Confirmation = () => (order.customer ? (\n        <>\n        <CssBaseline />\n          <div>\n            <Typography variant=\"h5\">¡ Good looks for your purchase, {order.customer.firstname} {order.customer.lastname} !</Typography>\n            <Divider className={classes.divider} />\n            <Typography variant=\"subtitle2\">You will be receiving a confirmation email at: {order.customer.email}</Typography>\n            <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n          </div>\n          <br />\n          <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n        </>\n      ) : (\n        <div className={classes.spinner}>\n          <CircularProgress />\n        </div>\n      ));\n    \n      if (error) {\n        Confirmation = () => (\n          <>\n            <Typography variant=\"h5\">Error: {error}</Typography>\n            <br />\n            <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n          </>\n        );\n      }\n\n    //if activeStep===0 return AddressForm else return PaymentForm\n    const Form = () => (activeStep === 0 ?\n        <AddressForm checkoutToken={checkoutToken} next={next}/> : \n        <PaymentForm checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} shippingData={shippingData} onCaptureCheckout={onCaptureCheckout}/>);\n        \n    return (\n        <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <main className={classes.layout}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h4\" align=\"center\">¡ Checkout !</Typography>\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\n                        {steps.map((step) =>(\n                            <Step key={step}>\n                                <StepLabel>{step}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\n                </Paper>\n            </main>\n\n        </main>\n    )\n}\n\nexport default Checkout\n","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/Checkout/checkoutStyles.js",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/AddressForm.jsx",["107","108"],"import React, {useState, useEffect} from 'react';\nimport {InputLabel, Select, MenuItem, Button, Grid, Typography} from '@material-ui/core';\nimport {useForm, FormProvider} from 'react-hook-form';\nimport {Link} from 'react-router-dom';\nimport {commerce} from '../../lib/commerce';\n\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({checkoutToken, next}) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id: code, label: name}));\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({id: code, label: name}));\n    const options = shippingOptions.map((sO) => ({\n        id: sO.id,\n        label: `${sO.description} - (${sO.price.formatted_with_symbol})`\n        }));\n\n    const methods = useForm();\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        console.log(\"Countries fetched: \", countries);\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    }\n\n    const fetchSubdivisions =  async (countryCode) => {\n        const {subdivisions} = await commerce.services.localeListSubdivisions(countryCode);\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region=null) => {\n        // console.log(\"Checkout Token: \", checkoutTokenId);\n        // console.log(\"Country: \", country);\n        // console.log(\"Region: \", region);\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {country, region});\n        setShippingOptions(options);\n        // console.log(\"Here are the options: \" , options);\n        setShippingOption(options[0].id);\n    }\n\n    //useEffect for fetching shipping countries\n    useEffect(() =>{\n        fetchShippingCountries(checkoutToken.id);\n    }, []);\n\n    //useEffect for fetching subdivisions, dependent on shippingCountry\n    useEffect(() =>{\n        //fetch subdivisions only if shippingCountry exists\n        if(shippingCountry) fetchSubdivisions(shippingCountry);\n    }, [shippingCountry]);\n\n    //useEffect for fetching shipping options, dependent on shippingSubdivision\n    useEffect(() =>{\n        //fetch options only if shippingSubdivision exists\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n    }, [shippingSubdivision]);\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\n            <FormProvider { ...methods}>\n                <form onSubmit={methods.handleSubmit((data) => next({...data, shippingCountry, shippingSubdivision, shippingOption}))}>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='First Name' />\n                        <FormInput required name='lastName' label='Last Name' />\n                        <FormInput required name='address1' label='Address' />\n                        <FormInput  name='address2' label='Address 2' />\n                        <FormInput required name='email' label='Email' />\n                        <FormInput required name='city' label='City' />\n                        <FormInput required name='zip' label='ZIP / Postal Code' />\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>\n                                        {country.label}\n                                    </MenuItem>        \n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping State</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {subdivisions.map((subdivision) => (\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\n                                        {subdivision.label}\n                                    </MenuItem>        \n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                                {options.map((option) => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.label}\n                                    </MenuItem>        \n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br/>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\n                        <Button type=\"submit\" variant=\"contained\">Next</Button>\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm\n","/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/PaymentForm.jsx",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/CustomTextField.jsx",[],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/CheckoutForm/Review.jsx",[],["109","110"],"/Users/arman/Documents/GitHub/MENSOZ.GG/src/components/Footer/Footer.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":166,"column":25,"nodeType":"117","endLine":166,"endColumn":235},{"ruleId":"118","severity":1,"message":"119","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":24},{"ruleId":"118","severity":1,"message":"122","line":53,"column":11,"nodeType":"120","messageId":"121","endLine":53,"endColumn":19},{"ruleId":"118","severity":1,"message":"123","line":3,"column":46,"nodeType":"120","messageId":"121","endLine":3,"endColumn":54},{"ruleId":"118","severity":1,"message":"124","line":3,"column":56,"nodeType":"120","messageId":"121","endLine":3,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":23,"column":40,"nodeType":"127","messageId":"128","endLine":23,"endColumn":42},{"ruleId":"129","severity":1,"message":"130","line":35,"column":8,"nodeType":"131","endLine":35,"endColumn":14,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":52,"column":8,"nodeType":"131","endLine":52,"endColumn":10,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"135","line":64,"column":8,"nodeType":"131","endLine":64,"endColumn":29,"suggestions":"136"},{"ruleId":"111","replacedBy":"137"},{"ruleId":"113","replacedBy":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'ShortTextSharp' is defined but never used.","Identifier","unusedVar","'imgClick' is assigned a value but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["143"],["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"150","text":"151"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"152","text":"153"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"154","text":"155"},[1438,1444],"[activeStep, cart, history]",[2380,2382],"[checkoutToken.id]",[2908,2929],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]